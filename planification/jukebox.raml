#show the full list of artists 
#show the full list of albums
#show the list of albums by nationality 
#show the list of albums by genre
#search for a song by title 
#show a paricular artist's album collection
#show a particular album's songs list                                                                                             
#play a song (by specifiying the song ID) 
# Enter  new artists,albums and songs ( only authenticated users)

#%RAML 1.0
title: jukebox API
baseUri: "http://api.jukebox/{version}"
version: v1

/songs:
    description: Collection of available songs in jukebox 
    get:
        description:Get a list of songs based on the title.
        queryParameters:
            songTitle:
                description:"The title of the song to search (case insensitive and doesn't need to match the whole title )
                required:true
                minLength: 3
                type: string
                example: "Get L"
        responses:
            200:
                body:  
                    application/json:
                        example:
                            {
                                "songs": [
                                    {
                                        "songId": "550e8400-e29b-41d4-a716-446655440000",
                                        "songTitle": "Get Lucky"
                                    },
                                    {
                                        "songId": "550e8400-e29b-41d4-a716-446655440111",
                                        "songTitle": "Loose yourself to dance"
                                    },
                                    {
                                        "songId": "550e8400-e29b-41d4-a716-446655440222",
                                        "songTitle": "Gio sorgio by Moroder"
                                    }
                                ]
                            }
    
    /{songID}: 
        description: Song entity
        get:
            description: get the song with songID = {songID}
            responses:
                200:
                    body:
                        application/json:
                            example:
                                {
                                    "songId": "550e8400-e29b-41d4-a716-446655440000",
                                    "songTitle": "Get Lucky",
                                    "duration": "6:07",
                                    "artist": {
                                        "artistId": "110e8300-e32b-41d4-a716-664400445500"
                                        "artistName": "Daft Punk",
                                        "imageURL": "http://travelhymns.com/wp-content/uploads/2013/06/random-access-memories1.jpg"
                                    },
                                    "album": {
                                        "albumId": "183100e3-0e2b-4404-a716-66104d440550",
                                        "albumName": "Random Access Memories",
                                        "imageURL": "http://upload.wikimedia.org/wikipedia/en/a/a7/Random_Access_Memories.jpg"
                                    }
                                }
                404:
                    body:
                        application/json:
                            example:
                                {"message" : "song Not found" }
        
        /file-content:
            description: The file to be reproduced by the client
            get:
                description: get the file content
                responses:
                    200:
                        body:
                            binary/octet-stream:
                                example: !include heybulldog.mp3
            post:
                description: Enters the file content for an existing song entity.
                    # Use the "binary/octet-stream" content type to specify the content from any consumer (excepting web-browsers).
                    #Use the "multipart-form/data" content type to upload a file which content will become the file-content
                body:
                    binary/octet-stream:
                    multipart/form-data:
                        properties:
                            file:
                                description: The file to be uploaded
                                required: true
                                type: file

    post:
/artists:
    get:
    post:
    /{artistID}: 
        get:
        /albums:
            get:

/albums:
    get:
    post:
        /{albumID}:
            get:
            /songs:
                get:

